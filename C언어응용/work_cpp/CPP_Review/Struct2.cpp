//#include <iostream>
//using namespace std;
///* <구조체>
//- 공통 부분을 하나의 그룹으로 묶어 자료 관리하기 위함
//- 배열은 타입이 같아야 함 /// 구조체는 X
//- 구조체는 public
//
//*/
//
////struct Student {
////	int id;
////	char name[20];
////	float grade[2];
////};
////
////int main() {
////	//---------------------------------------------------------------------------------------
////	// 구조체 배열
////
////	//Student sInfos[4] = {
////	//	{12223415, "김지혜", {4.1f, 4.2f}},
////	//	{12223521, "김진우", {3.9f, 3.8f}},
////	//	{12228831, "이두섭", {3.7f, 3.5f}},
////	//	{12228431, "이기운", {3.8f, 4.1f}}
////	//};
////
////	//for (auto i : sInfos) {
////	//	cout << i.id << " ";
////	//	cout << i.name << " ";
////	//	cout << i.grade[0] << " ";
////	//	cout << i.grade[1] << endl;
////	//}
////
////}
//
//// ======================================================================================
//
//struct Rectangle {
//	int x, y;
//	int w, h;
//
//};
//
//int main() {
//	//---------------------------------------------------------------------------------------
//	// 구조체 포인터
//
//	Rectangle r = { 15, 10, 50, 70 };
//	Rectangle* pr = &r;
//
//	cout << "x : " << r.x << " = " << (*pr).x << endl;	// 결과 동일 15
//	cout << "h : " << r.h << " = " << (*pr).h << endl;
//	
//	cout << endl;
//
//	//---------------------------------------------------------------------------------------
//	// 화살표 연산자
//
//	cout << "x : " << pr->x << " = " << (*pr).x << endl;
//	cout << "h : " << pr->h << " = " << r.h << endl;
//	//  cout << "h : " << ▶ r->h << " = " << r.x << endl;	// ▶ 불가(화살표라 포인터만 가리키기 가능한가봅니다)
//
//	cout << endl; 
//
//	//---------------------------------------------------------------------------------------
//	// 화살표 연산자로 값 변경
//
//	pr->h = 40;
//	cout << "h(변경) : " << pr->h << " = " << (*pr).h << endl;
//
//	cout << endl;
//
//	//---------------------------------------------------------------------------------------
//	// 포인터 값 변경
//
//	cout << "w : " << (*pr).w << " = " << pr->w << endl;
//	(*pr).w = 60;
//	cout << "w(변경) : " << pr->w << " = " << (*pr).w << endl;
//
//
//}
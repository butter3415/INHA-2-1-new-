//# include <iostream>
//using namespace std;
//
///* <reference (변수의 별명) >
//- 자료타입& 변수이름 = 대상변수; 
//- 포인터와의 차이
//	-> 레퍼런스 : 별도 메모리 할당 X 참조만 한다.
//	-> 포인터 : 별도 메모리 할당 O
//
//- 처음 선언하는 시점에 초기화 되어야 함.
//- 처음 정의 외에는 다른 참조 사용 불가
//- 일반 레퍼런스 변수에서는 값이 아닌 변수 이름 와야 한다( 60라인 참조 )
//- const 붙은 레퍼런스 변수는 값도 와도 되고 변수 이름도 와도 된다.( 62라인 참조 )
//*/
//
//
//int main() {
//	//short s = 5;
//	//short& rs = s;	// 레퍼런스 변수
//	//short* ps = &s;	// 포인터 변수
//
//	//cout << s << " " << &s << endl;		
//	//cout << rs << " " << &rs << endl;
//	//cout << *ps << " " << &ps << endl;
//
//	//---------------------------------------------------------------------------------------
//	
//	//int a = 1;
//	//int b = 2;
//	//int& c = a;	// 초기화
//
//	//c = 3;	// c 가 3을 들고 a 주소 타고 넘어가서 값 바꿈
//
//	//cout << "a : " << a << " b : " << b << " c : " << c << endl;
//
//	//c = b;	// c 가 b를 들고 a 주소 타고 넘어가서 값 바꿈
//	//		// b의 값 대입, 참조 X
//
//	//cout << "a : " << a << " b : " << b << " c : " << c << endl;
//	//
//	//c = 4;	// c 가 4를 들고 a 주소 타고 넘어가서 값 바꿈
//
//	//cout << "a : " << a << " b : " << b << " c : " << c << endl;
//
//	//---------------------------------------------------------------------------------------
//
//	int a = 5;
//	int b = 21;
//	const int& c = a;	// 값 변경 X 불러오기 O
//
//	// c = 521;			// (X) 수정 불가
//	cout << c << endl;	// (O) 읽기 가능
//
//	a = 521; 
//	cout << c << endl;	// a 를 직접 바꿔서 사용 가능
//
//	//---------------------------------------------------------------------------------------
//
//	int a = 5;
//	int& ra = a;			// 일반 레퍼런스 변수에서는 값이 아닌 변수 이름 와야 한다.
//							// a (O) 521 (X)
//	const int& cra = 521;	// const 붙은 레퍼런스 변수에서는 값이 와도 된다.
//							// a (O) 521 (O)
//
//}